# API NODE - with state_history_plugin
#	plugin = eosio::state_history_plugin
#	state-history-endpoint = 0.0.0.0:8889
#	trace-history = true

NODEOS=172.17.0.1:8889
NODEOS_CHAINID=5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191

# API NODE
NODEOS_HOST=172.17.0.1
NODEOS_PORT=8887

# DSP account
PROOF_PROVIDER_ACCOUNT=dsprovider33
# DSP active private key
PKEY=5Jxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Registering as a DSP:
# - Create an account (in this example: dsprovider33)
# - Register your provider with the ipfs DAPP service
# 	cleos push action ipfsservice1 regprovider '{"provider":"dsprovider33","model":{"model":{"commit_model_field":{"cost_per_action":1},"cleanup_model_field":{"cost_per_action":1},"warmup_model_field":{"cost_per_action":1}},"endpoint":"http://THIS-MACHINE-PUBLIC-IP:8888" }}' -p dsprovider33@active

# - Register your pricing package:
#	cleos push action dappservices regpkg '{"newpackage":{"id":0,"package_id":"default","service":"ipfsservice1","provider":"dsprovider33","quota":"10.0000 DAPP", "package_period":"100","min_stake_quantity":"1.0000 DAPP","min_unstake_period":1,"enabled":true}}' -p dsprovider33@active

# port 8888 needs to be exposed on this machine as the DAPP-supported EOS API
